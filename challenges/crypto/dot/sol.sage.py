

# This file was *autogenerated* from the file sol.sage
from sage.all_cmdline import *   # import sage library

_sage_const_5555 = Integer(5555); _sage_const_3 = Integer(3); _sage_const_64 = Integer(64); _sage_const_399 = Integer(399); _sage_const_2 = Integer(2); _sage_const_0 = Integer(0); _sage_const_1 = Integer(1)
from pwn import *
from secrets import randbits

r = remote("localhost", _sage_const_5555 )

n = _sage_const_3 
bits = _sage_const_64 

arr = [randbits(_sage_const_399 ) for i in range(n * _sage_const_2 )]

payload = ''

for i in range(_sage_const_0 , len(arr), _sage_const_2 ):
    payload += f'{arr[i]} {arr[i + _sage_const_1 ]},'

payload = payload[:-_sage_const_1 ]    

r.sendline(payload)
r.recvuntil('Re(<v1, v2>) = ').decode()
p = int(r.recvline().strip())
mat = []
for i in range(n * _sage_const_2 ):
    row = [_sage_const_0  for i in range(n * _sage_const_2  + _sage_const_2 )]
    row[i] = _sage_const_1 
    row[-_sage_const_2 ] = -arr[i]
    mat.append(row)

mat.append([_sage_const_0  for i in range(n * _sage_const_2 )] + [p, _sage_const_2 **bits])

M = Matrix(mat)

ans = list(M.LLL()[_sage_const_0 ])

payload = ''

for i in range(_sage_const_0 , len(arr), _sage_const_2 ):
    payload += f'{ans[i]} {ans[i + _sage_const_1 ]},'

payload = payload[:-_sage_const_1 ]    

r.sendline(payload)
r.interactive()

